name: On Pull Requests

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

concurrency:
  # Cancel any running workflow for the same branch when new commits are pushed.
  # We group both by ref_name (available when CI is triggered by a push to a branch/tag)
  # and head_ref (available when CI is triggered by a PR).
  # For merge queue, we use merge_group to ensure each merge queue run gets its own group.
  group: "on-pull-requests-${{ github.ref_name }}-${{ github.head_ref }}-${{ github.event.merge_group.head_sha || '' }}"
  cancel-in-progress: true

jobs:
  lint-pr-title:
    name: PR Title Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Lint PR title
        uses: grafana/shared-workflows/actions/lint-pr-title@19d8fb5687bb386849f7f53673c5f429e6387cf5 # v1.2.0
        with:
          config-path: "${{ github.workspace }}/.github/commitlint.config.js"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  zizmor:
    name: Zizmor GitHub Actions static analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Run zizmor ðŸŒˆ
        uses: zizmorcore/zizmor-action@f52a838cfabf134edcbaa7c8b3677dde20045018 # v0.1.1

  linting-and-tests:
    name: Linting and Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup go
        uses: ./.github/actions/setup-go

      - name: Ensure go mod is "tidy"
        run: |
          go mod tidy -diff
          cd tools && go mod tidy -diff

      - name: Linting and formatting
        run: |
          make lint
          make fmt
          make generate

          if ! git diff --exit-code; then
            echo "ðŸ”´ðŸ”´ðŸ”´: There are uncommitted changes. Please run 'make lint', 'make fmt', and 'make generate' and commit the changes. ðŸ”´ðŸ”´ðŸ”´"
            exit 1
          fi

      - name: Tests
        run: |
          make test

          # NOTE: for now don't run "acceptance tests" because the Terraform proposed pattern for these is that
          # they create real resources and we don't have a way for now to create the local environment to do so
          # make testacc

      - name: Build
        run: make build
